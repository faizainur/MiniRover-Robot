                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.9.0 #11195 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module lcd
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _DELAY_us
                                     12 	.globl _itoa
                                     13 	.globl _EN
                                     14 	.globl _RW
                                     15 	.globl _RS
                                     16 	.globl _CY
                                     17 	.globl _AC
                                     18 	.globl _F0
                                     19 	.globl _RS1
                                     20 	.globl _RS0
                                     21 	.globl _OV
                                     22 	.globl _FL
                                     23 	.globl _P
                                     24 	.globl _TF2
                                     25 	.globl _EXF2
                                     26 	.globl _RCLK
                                     27 	.globl _TCLK
                                     28 	.globl _EXEN2
                                     29 	.globl _TR2
                                     30 	.globl _C_T2
                                     31 	.globl _CP_RL2
                                     32 	.globl _T2CON_7
                                     33 	.globl _T2CON_6
                                     34 	.globl _T2CON_5
                                     35 	.globl _T2CON_4
                                     36 	.globl _T2CON_3
                                     37 	.globl _T2CON_2
                                     38 	.globl _T2CON_1
                                     39 	.globl _T2CON_0
                                     40 	.globl _PT2
                                     41 	.globl _PS
                                     42 	.globl _PT1
                                     43 	.globl _PX1
                                     44 	.globl _PT0
                                     45 	.globl _PX0
                                     46 	.globl _RD
                                     47 	.globl _WR
                                     48 	.globl _T1
                                     49 	.globl _T0
                                     50 	.globl _INT1
                                     51 	.globl _INT0
                                     52 	.globl _TXD
                                     53 	.globl _RXD
                                     54 	.globl _P3_7
                                     55 	.globl _P3_6
                                     56 	.globl _P3_5
                                     57 	.globl _P3_4
                                     58 	.globl _P3_3
                                     59 	.globl _P3_2
                                     60 	.globl _P3_1
                                     61 	.globl _P3_0
                                     62 	.globl _EA
                                     63 	.globl _ET2
                                     64 	.globl _ES
                                     65 	.globl _ET1
                                     66 	.globl _EX1
                                     67 	.globl _ET0
                                     68 	.globl _EX0
                                     69 	.globl _P2_7
                                     70 	.globl _P2_6
                                     71 	.globl _P2_5
                                     72 	.globl _P2_4
                                     73 	.globl _P2_3
                                     74 	.globl _P2_2
                                     75 	.globl _P2_1
                                     76 	.globl _P2_0
                                     77 	.globl _SM0
                                     78 	.globl _SM1
                                     79 	.globl _SM2
                                     80 	.globl _REN
                                     81 	.globl _TB8
                                     82 	.globl _RB8
                                     83 	.globl _TI
                                     84 	.globl _RI
                                     85 	.globl _T2EX
                                     86 	.globl _T2
                                     87 	.globl _P1_7
                                     88 	.globl _P1_6
                                     89 	.globl _P1_5
                                     90 	.globl _P1_4
                                     91 	.globl _P1_3
                                     92 	.globl _P1_2
                                     93 	.globl _P1_1
                                     94 	.globl _P1_0
                                     95 	.globl _TF1
                                     96 	.globl _TR1
                                     97 	.globl _TF0
                                     98 	.globl _TR0
                                     99 	.globl _IE1
                                    100 	.globl _IT1
                                    101 	.globl _IE0
                                    102 	.globl _IT0
                                    103 	.globl _P0_7
                                    104 	.globl _P0_6
                                    105 	.globl _P0_5
                                    106 	.globl _P0_4
                                    107 	.globl _P0_3
                                    108 	.globl _P0_2
                                    109 	.globl _P0_1
                                    110 	.globl _P0_0
                                    111 	.globl _B
                                    112 	.globl _A
                                    113 	.globl _ACC
                                    114 	.globl _PSW
                                    115 	.globl _TH2
                                    116 	.globl _TL2
                                    117 	.globl _RCAP2H
                                    118 	.globl _RCAP2L
                                    119 	.globl _T2MOD
                                    120 	.globl _T2CON
                                    121 	.globl _IP
                                    122 	.globl _P3
                                    123 	.globl _IE
                                    124 	.globl _P2
                                    125 	.globl _SBUF
                                    126 	.globl _SCON
                                    127 	.globl _P1
                                    128 	.globl _TH1
                                    129 	.globl _TH0
                                    130 	.globl _TL1
                                    131 	.globl _TL0
                                    132 	.globl _TMOD
                                    133 	.globl _TCON
                                    134 	.globl _PCON
                                    135 	.globl _DPH
                                    136 	.globl _DPL
                                    137 	.globl _SP
                                    138 	.globl _P0
                                    139 	.globl _LCDDisplayNumber_PARM_3
                                    140 	.globl _LCDDisplayNumber_PARM_2
                                    141 	.globl _LCDPrintString_PARM_2
                                    142 	.globl _LCDInit
                                    143 	.globl _LCDCmdWrite
                                    144 	.globl _LCDDataWrite
                                    145 	.globl _LCDPrintString
                                    146 	.globl _LCDDisplayNumber
                                    147 ;--------------------------------------------------------
                                    148 ; special function registers
                                    149 ;--------------------------------------------------------
                                    150 	.area RSEG    (ABS,DATA)
      000000                        151 	.org 0x0000
                           000080   152 _P0	=	0x0080
                           000081   153 _SP	=	0x0081
                           000082   154 _DPL	=	0x0082
                           000083   155 _DPH	=	0x0083
                           000087   156 _PCON	=	0x0087
                           000088   157 _TCON	=	0x0088
                           000089   158 _TMOD	=	0x0089
                           00008A   159 _TL0	=	0x008a
                           00008B   160 _TL1	=	0x008b
                           00008C   161 _TH0	=	0x008c
                           00008D   162 _TH1	=	0x008d
                           000090   163 _P1	=	0x0090
                           000098   164 _SCON	=	0x0098
                           000099   165 _SBUF	=	0x0099
                           0000A0   166 _P2	=	0x00a0
                           0000A8   167 _IE	=	0x00a8
                           0000B0   168 _P3	=	0x00b0
                           0000B8   169 _IP	=	0x00b8
                           0000C8   170 _T2CON	=	0x00c8
                           0000C9   171 _T2MOD	=	0x00c9
                           0000CA   172 _RCAP2L	=	0x00ca
                           0000CB   173 _RCAP2H	=	0x00cb
                           0000CC   174 _TL2	=	0x00cc
                           0000CD   175 _TH2	=	0x00cd
                           0000D0   176 _PSW	=	0x00d0
                           0000E0   177 _ACC	=	0x00e0
                           0000E0   178 _A	=	0x00e0
                           0000F0   179 _B	=	0x00f0
                                    180 ;--------------------------------------------------------
                                    181 ; special function bits
                                    182 ;--------------------------------------------------------
                                    183 	.area RSEG    (ABS,DATA)
      000000                        184 	.org 0x0000
                           000080   185 _P0_0	=	0x0080
                           000081   186 _P0_1	=	0x0081
                           000082   187 _P0_2	=	0x0082
                           000083   188 _P0_3	=	0x0083
                           000084   189 _P0_4	=	0x0084
                           000085   190 _P0_5	=	0x0085
                           000086   191 _P0_6	=	0x0086
                           000087   192 _P0_7	=	0x0087
                           000088   193 _IT0	=	0x0088
                           000089   194 _IE0	=	0x0089
                           00008A   195 _IT1	=	0x008a
                           00008B   196 _IE1	=	0x008b
                           00008C   197 _TR0	=	0x008c
                           00008D   198 _TF0	=	0x008d
                           00008E   199 _TR1	=	0x008e
                           00008F   200 _TF1	=	0x008f
                           000090   201 _P1_0	=	0x0090
                           000091   202 _P1_1	=	0x0091
                           000092   203 _P1_2	=	0x0092
                           000093   204 _P1_3	=	0x0093
                           000094   205 _P1_4	=	0x0094
                           000095   206 _P1_5	=	0x0095
                           000096   207 _P1_6	=	0x0096
                           000097   208 _P1_7	=	0x0097
                           000090   209 _T2	=	0x0090
                           000091   210 _T2EX	=	0x0091
                           000098   211 _RI	=	0x0098
                           000099   212 _TI	=	0x0099
                           00009A   213 _RB8	=	0x009a
                           00009B   214 _TB8	=	0x009b
                           00009C   215 _REN	=	0x009c
                           00009D   216 _SM2	=	0x009d
                           00009E   217 _SM1	=	0x009e
                           00009F   218 _SM0	=	0x009f
                           0000A0   219 _P2_0	=	0x00a0
                           0000A1   220 _P2_1	=	0x00a1
                           0000A2   221 _P2_2	=	0x00a2
                           0000A3   222 _P2_3	=	0x00a3
                           0000A4   223 _P2_4	=	0x00a4
                           0000A5   224 _P2_5	=	0x00a5
                           0000A6   225 _P2_6	=	0x00a6
                           0000A7   226 _P2_7	=	0x00a7
                           0000A8   227 _EX0	=	0x00a8
                           0000A9   228 _ET0	=	0x00a9
                           0000AA   229 _EX1	=	0x00aa
                           0000AB   230 _ET1	=	0x00ab
                           0000AC   231 _ES	=	0x00ac
                           0000AD   232 _ET2	=	0x00ad
                           0000AF   233 _EA	=	0x00af
                           0000B0   234 _P3_0	=	0x00b0
                           0000B1   235 _P3_1	=	0x00b1
                           0000B2   236 _P3_2	=	0x00b2
                           0000B3   237 _P3_3	=	0x00b3
                           0000B4   238 _P3_4	=	0x00b4
                           0000B5   239 _P3_5	=	0x00b5
                           0000B6   240 _P3_6	=	0x00b6
                           0000B7   241 _P3_7	=	0x00b7
                           0000B0   242 _RXD	=	0x00b0
                           0000B1   243 _TXD	=	0x00b1
                           0000B2   244 _INT0	=	0x00b2
                           0000B3   245 _INT1	=	0x00b3
                           0000B4   246 _T0	=	0x00b4
                           0000B5   247 _T1	=	0x00b5
                           0000B6   248 _WR	=	0x00b6
                           0000B7   249 _RD	=	0x00b7
                           0000B8   250 _PX0	=	0x00b8
                           0000B9   251 _PT0	=	0x00b9
                           0000BA   252 _PX1	=	0x00ba
                           0000BB   253 _PT1	=	0x00bb
                           0000BC   254 _PS	=	0x00bc
                           0000BD   255 _PT2	=	0x00bd
                           0000C8   256 _T2CON_0	=	0x00c8
                           0000C9   257 _T2CON_1	=	0x00c9
                           0000CA   258 _T2CON_2	=	0x00ca
                           0000CB   259 _T2CON_3	=	0x00cb
                           0000CC   260 _T2CON_4	=	0x00cc
                           0000CD   261 _T2CON_5	=	0x00cd
                           0000CE   262 _T2CON_6	=	0x00ce
                           0000CF   263 _T2CON_7	=	0x00cf
                           0000C8   264 _CP_RL2	=	0x00c8
                           0000C9   265 _C_T2	=	0x00c9
                           0000CA   266 _TR2	=	0x00ca
                           0000CB   267 _EXEN2	=	0x00cb
                           0000CC   268 _TCLK	=	0x00cc
                           0000CD   269 _RCLK	=	0x00cd
                           0000CE   270 _EXF2	=	0x00ce
                           0000CF   271 _TF2	=	0x00cf
                           0000D0   272 _P	=	0x00d0
                           0000D1   273 _FL	=	0x00d1
                           0000D2   274 _OV	=	0x00d2
                           0000D3   275 _RS0	=	0x00d3
                           0000D4   276 _RS1	=	0x00d4
                           0000D5   277 _F0	=	0x00d5
                           0000D6   278 _AC	=	0x00d6
                           0000D7   279 _CY	=	0x00d7
                           0000A0   280 _RS	=	0x00a0
                           0000A1   281 _RW	=	0x00a1
                           0000A2   282 _EN	=	0x00a2
                                    283 ;--------------------------------------------------------
                                    284 ; overlayable register banks
                                    285 ;--------------------------------------------------------
                                    286 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        287 	.ds 8
                                    288 ;--------------------------------------------------------
                                    289 ; internal ram data
                                    290 ;--------------------------------------------------------
                                    291 	.area DSEG    (DATA)
      000000                        292 _LCDPrintString_PARM_2:
      000000                        293 	.ds 3
      000003                        294 _LCDDisplayNumber_PARM_2:
      000003                        295 	.ds 2
      000005                        296 _LCDDisplayNumber_PARM_3:
      000005                        297 	.ds 1
      000006                        298 _LCDDisplayNumber_buffer_65536_83:
      000006                        299 	.ds 33
                                    300 ;--------------------------------------------------------
                                    301 ; overlayable items in internal ram 
                                    302 ;--------------------------------------------------------
                                    303 ;--------------------------------------------------------
                                    304 ; indirectly addressable internal ram data
                                    305 ;--------------------------------------------------------
                                    306 	.area ISEG    (DATA)
                                    307 ;--------------------------------------------------------
                                    308 ; absolute internal ram data
                                    309 ;--------------------------------------------------------
                                    310 	.area IABS    (ABS,DATA)
                                    311 	.area IABS    (ABS,DATA)
                                    312 ;--------------------------------------------------------
                                    313 ; bit data
                                    314 ;--------------------------------------------------------
                                    315 	.area BSEG    (BIT)
                                    316 ;--------------------------------------------------------
                                    317 ; paged external ram data
                                    318 ;--------------------------------------------------------
                                    319 	.area PSEG    (PAG,XDATA)
                                    320 ;--------------------------------------------------------
                                    321 ; external ram data
                                    322 ;--------------------------------------------------------
                                    323 	.area XSEG    (XDATA)
                                    324 ;--------------------------------------------------------
                                    325 ; absolute external ram data
                                    326 ;--------------------------------------------------------
                                    327 	.area XABS    (ABS,XDATA)
                                    328 ;--------------------------------------------------------
                                    329 ; external initialized ram data
                                    330 ;--------------------------------------------------------
                                    331 	.area XISEG   (XDATA)
                                    332 	.area HOME    (CODE)
                                    333 	.area GSINIT0 (CODE)
                                    334 	.area GSINIT1 (CODE)
                                    335 	.area GSINIT2 (CODE)
                                    336 	.area GSINIT3 (CODE)
                                    337 	.area GSINIT4 (CODE)
                                    338 	.area GSINIT5 (CODE)
                                    339 	.area GSINIT  (CODE)
                                    340 	.area GSFINAL (CODE)
                                    341 	.area CSEG    (CODE)
                                    342 ;--------------------------------------------------------
                                    343 ; global & static initialisations
                                    344 ;--------------------------------------------------------
                                    345 	.area HOME    (CODE)
                                    346 	.area GSINIT  (CODE)
                                    347 	.area GSFINAL (CODE)
                                    348 	.area GSINIT  (CODE)
                                    349 ;--------------------------------------------------------
                                    350 ; Home
                                    351 ;--------------------------------------------------------
                                    352 	.area HOME    (CODE)
                                    353 	.area HOME    (CODE)
                                    354 ;--------------------------------------------------------
                                    355 ; code
                                    356 ;--------------------------------------------------------
                                    357 	.area CSEG    (CODE)
                                    358 ;------------------------------------------------------------
                                    359 ;Allocation info for local variables in function 'LCDInit'
                                    360 ;------------------------------------------------------------
                                    361 ;	src/libs/lcd.c:4: void LCDInit(){
                                    362 ;	-----------------------------------------
                                    363 ;	 function LCDInit
                                    364 ;	-----------------------------------------
      000000                        365 _LCDInit:
                           000007   366 	ar7 = 0x07
                           000006   367 	ar6 = 0x06
                           000005   368 	ar5 = 0x05
                           000004   369 	ar4 = 0x04
                           000003   370 	ar3 = 0x03
                           000002   371 	ar2 = 0x02
                           000001   372 	ar1 = 0x01
                           000000   373 	ar0 = 0x00
                                    374 ;	src/libs/lcd.c:6: LCDCmdWrite(RETURN_HOME);
      000000 75 82 02         [24]  375 	mov	dpl,#0x02
      000003 12r00r18         [24]  376 	lcall	_LCDCmdWrite
                                    377 ;	src/libs/lcd.c:7: LCDCmdWrite(CMD_LCD_FOUR_BIT_MODE);             // Set data bus in 4-bit mode
      000006 75 82 28         [24]  378 	mov	dpl,#0x28
      000009 12r00r18         [24]  379 	lcall	_LCDCmdWrite
                                    380 ;	src/libs/lcd.c:8: LCDCmdWrite(DISPLAY_ON_CURSOR_BLINK_1);
      00000C 75 82 0E         [24]  381 	mov	dpl,#0x0e
      00000F 12r00r18         [24]  382 	lcall	_LCDCmdWrite
                                    383 ;	src/libs/lcd.c:9: LCDCmdWrite(CLEAR_SCREEN);
      000012 75 82 01         [24]  384 	mov	dpl,#0x01
                                    385 ;	src/libs/lcd.c:11: }
      000015 02r00r18         [24]  386 	ljmp	_LCDCmdWrite
                                    387 ;------------------------------------------------------------
                                    388 ;Allocation info for local variables in function 'LCDCmdWrite'
                                    389 ;------------------------------------------------------------
                                    390 ;cmd                       Allocated to registers r7 
                                    391 ;------------------------------------------------------------
                                    392 ;	src/libs/lcd.c:13: int LCDCmdWrite(char cmd){
                                    393 ;	-----------------------------------------
                                    394 ;	 function LCDCmdWrite
                                    395 ;	-----------------------------------------
      000018                        396 _LCDCmdWrite:
      000018 AF 82            [24]  397 	mov	r7,dpl
                                    398 ;	src/libs/lcd.c:15: LCDDatabus = (cmd & 0xF0);
      00001A 74 F0            [12]  399 	mov	a,#0xf0
      00001C 5F               [12]  400 	anl	a,r7
      00001D F5 A0            [12]  401 	mov	_P2,a
                                    402 ;	src/libs/lcd.c:17: RS = LOW;
                                    403 ;	assignBit
      00001F C2 A0            [12]  404 	clr	_RS
                                    405 ;	src/libs/lcd.c:18: RW = LOW;
                                    406 ;	assignBit
      000021 C2 A1            [12]  407 	clr	_RW
                                    408 ;	src/libs/lcd.c:19: EN = HIGH;
                                    409 ;	assignBit
      000023 D2 A2            [12]  410 	setb	_EN
                                    411 ;	src/libs/lcd.c:20: DELAY_us(1000);
      000025 90 03 E8         [24]  412 	mov	dptr,#0x03e8
      000028 C0 07            [24]  413 	push	ar7
      00002A 12r00r00         [24]  414 	lcall	_DELAY_us
                                    415 ;	src/libs/lcd.c:21: EN = LOW;
                                    416 ;	assignBit
      00002D C2 A2            [12]  417 	clr	_EN
                                    418 ;	src/libs/lcd.c:23: DELAY_us(10000);
      00002F 90 27 10         [24]  419 	mov	dptr,#0x2710
      000032 12r00r00         [24]  420 	lcall	_DELAY_us
      000035 D0 07            [24]  421 	pop	ar7
                                    422 ;	src/libs/lcd.c:25: LCDDatabus = ((cmd<<4) & 0xF0);
      000037 EF               [12]  423 	mov	a,r7
      000038 C4               [12]  424 	swap	a
      000039 54 F0            [12]  425 	anl	a,#0xf0
      00003B FF               [12]  426 	mov	r7,a
      00003C 74 F0            [12]  427 	mov	a,#0xf0
      00003E 5F               [12]  428 	anl	a,r7
      00003F F5 A0            [12]  429 	mov	_P2,a
                                    430 ;	src/libs/lcd.c:26: RS = LOW;
                                    431 ;	assignBit
      000041 C2 A0            [12]  432 	clr	_RS
                                    433 ;	src/libs/lcd.c:27: RW = LOW;
                                    434 ;	assignBit
      000043 C2 A1            [12]  435 	clr	_RW
                                    436 ;	src/libs/lcd.c:28: EN = HIGH;
                                    437 ;	assignBit
      000045 D2 A2            [12]  438 	setb	_EN
                                    439 ;	src/libs/lcd.c:29: DELAY_us(1000);
      000047 90 03 E8         [24]  440 	mov	dptr,#0x03e8
      00004A 12r00r00         [24]  441 	lcall	_DELAY_us
                                    442 ;	src/libs/lcd.c:30: EN = LOW;
                                    443 ;	assignBit
      00004D C2 A2            [12]  444 	clr	_EN
                                    445 ;	src/libs/lcd.c:32: DELAY_us(10000);
      00004F 90 27 10         [24]  446 	mov	dptr,#0x2710
      000052 12r00r00         [24]  447 	lcall	_DELAY_us
                                    448 ;	src/libs/lcd.c:33: return 0;
      000055 90 00 00         [24]  449 	mov	dptr,#0x0000
                                    450 ;	src/libs/lcd.c:34: }
      000058 22               [24]  451 	ret
                                    452 ;------------------------------------------------------------
                                    453 ;Allocation info for local variables in function 'LCDDataWrite'
                                    454 ;------------------------------------------------------------
                                    455 ;data                      Allocated to registers r7 
                                    456 ;------------------------------------------------------------
                                    457 ;	src/libs/lcd.c:36: int LCDDataWrite(char data){
                                    458 ;	-----------------------------------------
                                    459 ;	 function LCDDataWrite
                                    460 ;	-----------------------------------------
      000059                        461 _LCDDataWrite:
      000059 AF 82            [24]  462 	mov	r7,dpl
                                    463 ;	src/libs/lcd.c:38: LCDDatabus = (data & 0xF0);
      00005B 74 F0            [12]  464 	mov	a,#0xf0
      00005D 5F               [12]  465 	anl	a,r7
      00005E F5 A0            [12]  466 	mov	_P2,a
                                    467 ;	src/libs/lcd.c:39: RS = HIGH;
                                    468 ;	assignBit
      000060 D2 A0            [12]  469 	setb	_RS
                                    470 ;	src/libs/lcd.c:40: RW = LOW;
                                    471 ;	assignBit
      000062 C2 A1            [12]  472 	clr	_RW
                                    473 ;	src/libs/lcd.c:41: EN = HIGH;
                                    474 ;	assignBit
      000064 D2 A2            [12]  475 	setb	_EN
                                    476 ;	src/libs/lcd.c:42: DELAY_us(1000);
      000066 90 03 E8         [24]  477 	mov	dptr,#0x03e8
      000069 C0 07            [24]  478 	push	ar7
      00006B 12r00r00         [24]  479 	lcall	_DELAY_us
                                    480 ;	src/libs/lcd.c:43: EN = LOW;
                                    481 ;	assignBit
      00006E C2 A2            [12]  482 	clr	_EN
                                    483 ;	src/libs/lcd.c:45: DELAY_us(10000);
      000070 90 27 10         [24]  484 	mov	dptr,#0x2710
      000073 12r00r00         [24]  485 	lcall	_DELAY_us
      000076 D0 07            [24]  486 	pop	ar7
                                    487 ;	src/libs/lcd.c:47: LCDDatabus = ((data<<4) & 0xF0);
      000078 EF               [12]  488 	mov	a,r7
      000079 C4               [12]  489 	swap	a
      00007A 54 F0            [12]  490 	anl	a,#0xf0
      00007C FF               [12]  491 	mov	r7,a
      00007D 74 F0            [12]  492 	mov	a,#0xf0
      00007F 5F               [12]  493 	anl	a,r7
      000080 F5 A0            [12]  494 	mov	_P2,a
                                    495 ;	src/libs/lcd.c:48: RS = HIGH;
                                    496 ;	assignBit
      000082 D2 A0            [12]  497 	setb	_RS
                                    498 ;	src/libs/lcd.c:49: RW = LOW;
                                    499 ;	assignBit
      000084 C2 A1            [12]  500 	clr	_RW
                                    501 ;	src/libs/lcd.c:50: EN = HIGH;
                                    502 ;	assignBit
      000086 D2 A2            [12]  503 	setb	_EN
                                    504 ;	src/libs/lcd.c:51: DELAY_us(1000);
      000088 90 03 E8         [24]  505 	mov	dptr,#0x03e8
      00008B 12r00r00         [24]  506 	lcall	_DELAY_us
                                    507 ;	src/libs/lcd.c:52: EN = LOW;
                                    508 ;	assignBit
      00008E C2 A2            [12]  509 	clr	_EN
                                    510 ;	src/libs/lcd.c:54: DELAY_us(10000);
      000090 90 27 10         [24]  511 	mov	dptr,#0x2710
      000093 12r00r00         [24]  512 	lcall	_DELAY_us
                                    513 ;	src/libs/lcd.c:55: return 0;
      000096 90 00 00         [24]  514 	mov	dptr,#0x0000
                                    515 ;	src/libs/lcd.c:56: }
      000099 22               [24]  516 	ret
                                    517 ;------------------------------------------------------------
                                    518 ;Allocation info for local variables in function 'LCDPrintString'
                                    519 ;------------------------------------------------------------
                                    520 ;string                    Allocated with name '_LCDPrintString_PARM_2'
                                    521 ;line                      Allocated to registers r7 
                                    522 ;------------------------------------------------------------
                                    523 ;	src/libs/lcd.c:58: void LCDPrintString(uint8_t line, char* string){
                                    524 ;	-----------------------------------------
                                    525 ;	 function LCDPrintString
                                    526 ;	-----------------------------------------
      00009A                        527 _LCDPrintString:
                                    528 ;	src/libs/lcd.c:59: switch (line)
      00009A E5 82            [12]  529 	mov	a,dpl
      00009C FF               [12]  530 	mov	r7,a
      00009D 24 FC            [12]  531 	add	a,#0xff - 0x03
      00009F 40 2C            [24]  532 	jc	00114$
      0000A1 EF               [12]  533 	mov	a,r7
      0000A2 2F               [12]  534 	add	a,r7
                                    535 ;	src/libs/lcd.c:61: case FIRST_LINE:
      0000A3 90r00rA7         [24]  536 	mov	dptr,#00126$
      0000A6 73               [24]  537 	jmp	@a+dptr
      0000A7                        538 00126$:
      0000A7 80 06            [24]  539 	sjmp	00101$
      0000A9 80 0C            [24]  540 	sjmp	00102$
      0000AB 80 12            [24]  541 	sjmp	00103$
      0000AD 80 18            [24]  542 	sjmp	00104$
      0000AF                        543 00101$:
                                    544 ;	src/libs/lcd.c:62: LCDCmdWrite(CURSOR_TO_FIRST_LINE);
      0000AF 75 82 80         [24]  545 	mov	dpl,#0x80
      0000B2 12r00r18         [24]  546 	lcall	_LCDCmdWrite
                                    547 ;	src/libs/lcd.c:63: break;
                                    548 ;	src/libs/lcd.c:64: case SECOND_LINE:
      0000B5 80 16            [24]  549 	sjmp	00114$
      0000B7                        550 00102$:
                                    551 ;	src/libs/lcd.c:65: LCDCmdWrite(CURSOR_TO_SECOND_LINE);
      0000B7 75 82 C0         [24]  552 	mov	dpl,#0xc0
      0000BA 12r00r18         [24]  553 	lcall	_LCDCmdWrite
                                    554 ;	src/libs/lcd.c:66: break;
                                    555 ;	src/libs/lcd.c:67: case THIRD_LINE:
      0000BD 80 0E            [24]  556 	sjmp	00114$
      0000BF                        557 00103$:
                                    558 ;	src/libs/lcd.c:68: LCDCmdWrite(CURSOR_TO_THIRD_LINE);
      0000BF 75 82 90         [24]  559 	mov	dpl,#0x90
      0000C2 12r00r18         [24]  560 	lcall	_LCDCmdWrite
                                    561 ;	src/libs/lcd.c:69: break;
                                    562 ;	src/libs/lcd.c:70: case FORTH_LINE:
      0000C5 80 06            [24]  563 	sjmp	00114$
      0000C7                        564 00104$:
                                    565 ;	src/libs/lcd.c:71: LCDCmdWrite(CURSOR_TO_FORTH_LINE);
      0000C7 75 82 D0         [24]  566 	mov	dpl,#0xd0
      0000CA 12r00r18         [24]  567 	lcall	_LCDCmdWrite
                                    568 ;	src/libs/lcd.c:77: while(*string){
      0000CD                        569 00114$:
      0000CD AD*00            [24]  570 	mov	r5,_LCDPrintString_PARM_2
      0000CF AE*01            [24]  571 	mov	r6,(_LCDPrintString_PARM_2 + 1)
      0000D1 AF*02            [24]  572 	mov	r7,(_LCDPrintString_PARM_2 + 2)
      0000D3                        573 00107$:
      0000D3 8D 82            [24]  574 	mov	dpl,r5
      0000D5 8E 83            [24]  575 	mov	dph,r6
      0000D7 8F F0            [24]  576 	mov	b,r7
      0000D9 12r00r00         [24]  577 	lcall	__gptrget
      0000DC FC               [12]  578 	mov	r4,a
      0000DD 60 18            [24]  579 	jz	00110$
                                    580 ;	src/libs/lcd.c:78: LCDDataWrite(*string++);
      0000DF 8C 82            [24]  581 	mov	dpl,r4
      0000E1 0D               [12]  582 	inc	r5
      0000E2 BD 00 01         [24]  583 	cjne	r5,#0x00,00128$
      0000E5 0E               [12]  584 	inc	r6
      0000E6                        585 00128$:
      0000E6 C0 07            [24]  586 	push	ar7
      0000E8 C0 06            [24]  587 	push	ar6
      0000EA C0 05            [24]  588 	push	ar5
      0000EC 12r00r59         [24]  589 	lcall	_LCDDataWrite
      0000EF D0 05            [24]  590 	pop	ar5
      0000F1 D0 06            [24]  591 	pop	ar6
      0000F3 D0 07            [24]  592 	pop	ar7
      0000F5 80 DC            [24]  593 	sjmp	00107$
      0000F7                        594 00110$:
                                    595 ;	src/libs/lcd.c:80: }
      0000F7 22               [24]  596 	ret
                                    597 ;------------------------------------------------------------
                                    598 ;Allocation info for local variables in function 'LCDDisplayNumber'
                                    599 ;------------------------------------------------------------
                                    600 ;number                    Allocated with name '_LCDDisplayNumber_PARM_2'
                                    601 ;radix                     Allocated with name '_LCDDisplayNumber_PARM_3'
                                    602 ;line                      Allocated to registers r7 
                                    603 ;buffer                    Allocated with name '_LCDDisplayNumber_buffer_65536_83'
                                    604 ;------------------------------------------------------------
                                    605 ;	src/libs/lcd.c:82: void LCDDisplayNumber(uint8_t line,int number,unsigned char radix)
                                    606 ;	-----------------------------------------
                                    607 ;	 function LCDDisplayNumber
                                    608 ;	-----------------------------------------
      0000F8                        609 _LCDDisplayNumber:
      0000F8 AF 82            [24]  610 	mov	r7,dpl
                                    611 ;	src/libs/lcd.c:85: itoa(number,buffer,radix);
      0000FA 75*00r06         [24]  612 	mov	_itoa_PARM_2,#_LCDDisplayNumber_buffer_65536_83
      0000FD 75*01 00         [24]  613 	mov	(_itoa_PARM_2 + 1),#0x00
      000100 75*02 40         [24]  614 	mov	(_itoa_PARM_2 + 2),#0x40
      000103 85*05*00         [24]  615 	mov	_itoa_PARM_3,_LCDDisplayNumber_PARM_3
      000106 75*01 00         [24]  616 	mov	(_itoa_PARM_3 + 1),#0x00
      000109 85*03 82         [24]  617 	mov	dpl,_LCDDisplayNumber_PARM_2
      00010C 85*04 83         [24]  618 	mov	dph,(_LCDDisplayNumber_PARM_2 + 1)
      00010F C0 07            [24]  619 	push	ar7
      000111 12r00r00         [24]  620 	lcall	_itoa
      000114 D0 07            [24]  621 	pop	ar7
                                    622 ;	src/libs/lcd.c:86: LCDPrintString(line, buffer);
      000116 75*00r06         [24]  623 	mov	_LCDPrintString_PARM_2,#_LCDDisplayNumber_buffer_65536_83
      000119 75*01 00         [24]  624 	mov	(_LCDPrintString_PARM_2 + 1),#0x00
      00011C 75*02 40         [24]  625 	mov	(_LCDPrintString_PARM_2 + 2),#0x40
      00011F 8F 82            [24]  626 	mov	dpl,r7
                                    627 ;	src/libs/lcd.c:87: }
      000121 02r00r9A         [24]  628 	ljmp	_LCDPrintString
                                    629 	.area CSEG    (CODE)
                                    630 	.area CONST   (CODE)
                                    631 	.area XINIT   (CODE)
                                    632 	.area CABS    (ABS,CODE)
